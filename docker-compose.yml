version: '3.8'

services:
  postgres:
    image: postgres:13
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 30s
      timeout: 30s
      retries: 3
    container_name: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - airflow-network

  airflow-webserver:
    build:
      context: airflow
      dockerfile: Dockerfile
    container_name: airflow-webserver
    env_file:
      - .env  # Loads environment variables from .env
    volumes:
      - ./airflow/dags:/opt/airflow/dags  # Mount local DAGs folder
    ports:
      - "8080:8080"
    command: >
      bash -c "airflow db init && airflow users create --role Admin --username admin --email admin@example.com --firstname admin --lastname admin --password admin && airflow webserver"
    networks:
      - airflow-network
    depends_on:
      - postgres
      - redis

  airflow-scheduler:
    build:
      context: airflow
      dockerfile: Dockerfile
    container_name: airflow-scheduler
    env_file:
      - .env  # Loads environment variables from .env
    volumes:
      - ./airflow/dags:/opt/airflow/dags  # Mount local DAGs folder      
    command: bash -c "airflow db init && airflow scheduler"
    networks:
      - airflow-network
    depends_on:
      - postgres
      - redis

  airflow-worker-1:
    build:
      context: airflow
      dockerfile: Dockerfile
    container_name: airflow-worker-1
    env_file:
      - .env  # Loads environment variables from .env
    volumes:
      - ./airflow/dags:/opt/airflow/dags  # Mount local DAGs folder      
    command: bash -c "airflow db init && airflow celery worker"
    networks:
      - airflow-network
    depends_on:
      - postgres
      - redis

  airflow-worker-2:
    build:
      context: airflow
      dockerfile: Dockerfile
    container_name: airflow-worker-2
    env_file:
      - .env  # Loads environment variables from .env
    volumes:
      - ./airflow/dags:/opt/airflow/dags  # Mount local DAGs folder      
    command: bash -c "airflow db init && airflow celery worker"
    networks:
      - airflow-network
    depends_on:
      - postgres
      - redis

networks:
  airflow-network:
    driver: bridge

volumes:
  postgres_data:
